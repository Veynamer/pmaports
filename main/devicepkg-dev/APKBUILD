pkgname=devicepkg-dev
pkgver=0.19.6
pkgrel=0
pkgdesc="Provides default device package functions"
url="https://postmarketos.org"
arch="noarch"
license="MIT"
makedepends="jinja2-cli"
subpackages="$pkgname-jinja2:_jinja2"
source="
	compiler-gcc.h
	config-fragments/mainline.config.j2
	config-fragments/uefi.config.j2
	devicepkg_build.sh
	devicepkg_package.sh
	devicepkg_pmtest_post_install.sh
	downstreamkernel_prepare.sh
	downstreamkernel_package.sh
	devicepkg_subpackage_kernel.sh
	kernel_build.sh
	kernel_package.sh
	kernel_prepare.sh
	testdata/deviceinfo
	testdata/expected-deviceinfo-downstream
	testdata/expected-deviceinfo-mainline
	testdata/expected-uefi-config-arm
	testdata/expected-uefi-config-arm64
	testdata/expected-uefi-config-arm64-pre-6.1.0
	testdata/expected-uefi-config-x86_64
"

check() {
	# Prepare a temporary dir to run the tests
	testdir=$(mktemp -d)
	install -Dm644 "$srcdir/deviceinfo" \
		"$testdir/src/deviceinfo"

	# Execute the script to create the subpackage deviceinfo
	sh devicepkg_subpackage_kernel.sh \
		$testdir device-test device-test-kernel-downstream
	sh devicepkg_subpackage_kernel.sh \
		$testdir device-test device-test-kernel-mainline

	# Compare the result with the expected files
	if ! cmp -s "$srcdir/expected-deviceinfo-downstream" \
		"$testdir/pkg/device-test-kernel-downstream/usr/share/deviceinfo/device-test-kernel-downstream"
	then
		echo "ERROR: unexpected result with downstream deviceinfo"
		exit 1
	fi
	if ! cmp -s "$srcdir/expected-deviceinfo-mainline" \
		"$testdir/pkg/device-test-kernel-mainline/usr/share/deviceinfo/device-test-kernel-mainline"
	then
		echo "ERROR: unexpected result with mainline deviceinfo"
		exit 1
	fi
	# Check that the link is a link, and that it points to the right place
	if [ "$(readlink $testdir/pkg/device-test-kernel-mainline/usr/share/deviceinfo/deviceinfo)" != "device-test-kernel-mainline" ];
	then
		echo "ERROR: mainline deviceinfo link not pointing to correct location"
	fi
	if ! cmp -s "$testdir/pkg/device-test-kernel-mainline/usr/share/deviceinfo/deviceinfo" \
		"$srcdir/expected-deviceinfo-mainline";
	then
		echo "ERROR: mainline deviceinfo contains incorrect data"
	fi

	_template="$srcdir/uefi.config.j2"

	# Generate uefi config on 6.6.0 arm
	# (no CONFIG_EFI_ZBOOT, no CONFIG_EFI_MIXED)
	jinja2 --strict \
		-D kernel_version="6" \
		-D kernel_patchlevel="6" \
		-D arch="arm" \
		"$_template" > "$testdir/uefi-config-arm"

	# Generate uefi config on 6.6.0 arm64
	# (CONFIG_EFI_ZBOOT, no CONFIG_EFI_MIXED)
	jinja2 --strict \
		-D kernel_version="6" \
		-D kernel_patchlevel="6" \
		-D arch="arm64" \
		"$_template" > "$testdir/uefi-config-arm64"

	# Generate uefi config on 5.15.0 arm64
	# (no CONFIG_EFI_ZBOOT, no CONFIG_EFI_MIXED)
	jinja2 --strict \
		-D kernel_version="5" \
		-D kernel_patchlevel="15" \
		-D arch="$_carch" \
		"$_template" > "$testdir/uefi-config-arm64-pre-6.1.0"

	# Generate uefi config on 6.6.0 x86_64
	# (no CONFIG_EFI_ZBOOT, CONFIG_EFI_MIXED)
	jinja2 --strict \
		-D kernel_version="6" \
		-D kernel_patchlevel="6" \
		-D arch="x86_64" \
		"$_template" > "$testdir/uefi-config-x86_64"

	if ! cmp -s "$srcdir/expected-uefi-config-arm" \
		"$testdir/uefi-config-arm"
	then
		echo "ERROR: unexpected result with uefi config on arm using 6.6.0 version"
		exit 1
	fi

	if ! cmp -s "$srcdir/expected-uefi-config-arm64" \
		"$testdir/uefi-config-arm64"
	then
		echo "ERROR: unexpected result with uefi config on arm64 using 6.6.0 version"
		exit 1
	fi

	if ! cmp -s "$srcdir/expected-uefi-config-arm64-pre-6.1.0" \
		"$testdir/uefi-config-arm64-pre-6.1.0"
	then
		echo "ERROR: unexpected result with uefi config on arm64 using 5.15.0 version"
		exit 1
	fi

	if ! cmp -s "$srcdir/expected-uefi-config-x86_64" \
		"$testdir/uefi-config-x86_64"
	then
		echo "ERROR: unexpected result with uefi config on x86_64 using 6.6.0 version"
		exit 1
	fi

	# Cleanup
	rm -r "$testdir"
}

package() {
	install -Dm755 "$srcdir/devicepkg_build.sh" \
		"$pkgdir/usr/bin/devicepkg_build"
	install -Dm755 "$srcdir/devicepkg_package.sh" \
		"$pkgdir/usr/bin/devicepkg_package"
	install -Dm755 "$srcdir/devicepkg_pmtest_post_install.sh" \
		"$pkgdir"/usr/bin/devicepkg_pmtest_post_install
	install -Dm755 "$srcdir/downstreamkernel_prepare.sh" \
		"$pkgdir/usr/bin/downstreamkernel_prepare"
	install -Dm755 "$srcdir/downstreamkernel_package.sh" \
		"$pkgdir/usr/bin/downstreamkernel_package"
	install -Dm755 "$srcdir/devicepkg_subpackage_kernel.sh" \
		"$pkgdir/usr/bin/devicepkg_subpackage_kernel"
	install -Dm755 "$srcdir/kernel_build.sh" \
		"$pkgdir/usr/bin/kernel_build"
	install -Dm755 "$srcdir/kernel_package.sh" \
		"$pkgdir/usr/bin/kernel_package"
	install -Dm755 "$srcdir/kernel_prepare.sh" \
		"$pkgdir/usr/bin/kernel_prepare"
	install -Dm644 "$srcdir/compiler-gcc.h" \
		"$pkgdir/usr/share/devicepkg-dev/compiler-gcc.h"
	install -Dm644 "$srcdir/mainline.config.j2" \
		"$pkgdir/usr/share/devicepkg-dev/config-fragments/mainline.config.j2"
	install -Dm644 "$srcdir/uefi.config.j2" \
		"$pkgdir/usr/share/devicepkg-dev/config-fragments/uefi.config.j2"
}

# Install jinja2-cli when building kernel for kconfig fragments,
# rely on postmarketos-installkernel for it
_jinja2() {
	install_if="$pkgname=$pkgver-r$pkgrel postmarketos-installkernel"
	depends="jinja2-cli"
	mkdir "$subpkgdir"
}

sha512sums="
d69930dd790b00fb39760a37d95a10899f0d167e10e2804feb05d9ce04f94185dc32d36edc90214aba2ea2aa09bf18f7dab93f1d2eff23f67beb2cc83be30e7c  compiler-gcc.h
989009ba34096c7c195130a572cfae4b221c495da2dabf9481ccef3b13ab5623f06f3a1b2a880d69db06ee8f7c699d98406e86de80cd3fb5fee2d208e2ac3198  mainline.config.j2
04cdc0b2f88782497c709a3ad314aa7fb3c47097837a44d360af71785cef9774d4d7b075afba492a35a4557d9d7674c964f78aec90c7d01873074b95c541b6f6  uefi.config.j2
a483a970f6cf3e1f2724d8ec1039c2a935cc3e75efd016b3f134cef8a6e53820428bff0f1cb2bcfbd8ccda33c69fdb250be1cf061b2dc53c6063d2ab49023f97  devicepkg_build.sh
5b83255dabd2019ea07a589d185bee5dad6760e28ab02de3480a0adfd1cf20d0c2e0b4a978e56757899ef683819091cee99d168a48e24a3f604b725e1ba26849  devicepkg_package.sh
93432976bb785c3ad23ba40ac80c11cb2fb0d83d73642ed39fa3f637a471d5d08641ccc42912d63139af49c521bb86bd02a613482bf8f5e95437aa000a125969  devicepkg_pmtest_post_install.sh
f81e74e45ae8e55686ae459f550e229e7398daeafa72bd023c2d8c3a0d50e60bf53d5bbdfec931e9fbabe1cd71de57b2192805aaef091ab90bc7203cbaf66ba6  downstreamkernel_prepare.sh
107242a3da38a574c46cb779e0c75afbeef4cfe659e1b85971973ac55843df06f70f53a5985ca623d4123f05f2984f5dace4a53a3509ecefd7dfdc3c8b705cfe  downstreamkernel_package.sh
b9e64582d8c4ed35116002388b58ee62531b8db5de3f4629980ca5dcc9f39ba2c1c7c7a9caa03438e183afa42c8cc6680fe217304ef667b8bf213d93789226e9  devicepkg_subpackage_kernel.sh
9fb15d78e11ff19dbb85f283ccc8bd59f4ecdbf0382053b5f251e7e4e573b7b329cd73c119008cd3f95f2b537a2b45d0753abe669c56f4378d847373f11a569b  kernel_build.sh
6a0ade8f5b2f48271a2330aecf2ec55cdcb68531999970be65cb0d9637665bd46748115d634de7eaa73489d96db4ff78dabe93b3038879578a143bbed5d3e548  kernel_package.sh
6d7e2ecf895eeebce8538a0d9f5cf21ff6223f1dc48960f21aa26072ccec4eb6d7266faa597b9cb05721fb4a03973100e3c72551ce5312951d43f1678c17b3cf  kernel_prepare.sh
f09cb34626f2aedf9ffa69a8050500d54291c416f5e8c8d67ce72244e1d906b190d84a3fadccd7d82824b6a68d981ca8a197a053804df1103457ddb7892b2cc9  deviceinfo
136247a16ec91dc0c7241eeddb28c2196ae3b29946a9bc7e9566f848491ef1c53b12d05bf2dbc1cc352986712fd76f25c1510bcc8f301af540a2f01c33b299e1  expected-deviceinfo-downstream
b2e87ab10c116adc18e89ebf478b08904b9a73b17176c03068f8711dac6353e6ab4b3fdaf4051eda05660cac31514520756973ec43d052ba9f42cb1ec9375c5d  expected-deviceinfo-mainline
c75c157bd7fe05662be7fe24d00f8603ddc4a760f5589463ae4ea2a594430e700835ba2b6edd6b540be5c131fcfc8717556c17a1fdbc41583926787bb09709bd  expected-uefi-config-arm
22406d611d716d32482ee3b46080d7b945ac3e0e4083bdddfa7a1eca4e9733332118a90739f4ded6e2eee01abe213c95408d9e10fbf087e19d46907bbc21bc7e  expected-uefi-config-arm64
c75c157bd7fe05662be7fe24d00f8603ddc4a760f5589463ae4ea2a594430e700835ba2b6edd6b540be5c131fcfc8717556c17a1fdbc41583926787bb09709bd  expected-uefi-config-arm64-pre-6.1.0
3d3ca6a614e7114a9e45c307be42245550030cc8d5d8c7a7e9130cb5da8c5a6b6a641fa9f33c41a4a9ec3dd9158b4a03b00ef2bbae233b255200d91400498e06  expected-uefi-config-x86_64
"
