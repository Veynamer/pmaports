From cb613d0d1a9dbb687fef3cf0c78adb367ef35188 Mon Sep 17 00:00:00 2001
From: Clayton Craft <clayton@craftyguy.net>
Date: Tue, 21 Jan 2025 11:50:43 -0800
Subject: [PATCH 3/4] abuild: add systemd splitfunc
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This adds support for splitting systemd-related stuff into a -systemd
subpkg, and installing it by default ***only*** when systemd is
installed.

There's a bit more logic in default_systemd than "normal" because we
want to use systemd "presets" downstream to configure services to start
by default. Using this feature requires running `systemctl preset`
at install time (only!) and cleaning up on de-install, so two install
scripts are generated by default when default_systemd detects it is
packaging sytemd unit files that *could* have presets configured for
them. It's the responsibility of downstream distros and/or users to
provide presets for stuff, abuild is only including the machinery to
*apply* those presets at an appropriate time.

The approach here is very similar to what Fedora and Debian (and
probably others) do.

The install scripts depend on a macro file to implement the actual
logic that calls `systemctl preset` the appropriate way for system vs
user session. The idea is that downstream distros that support systemd
can provide this macro. Or it can be included in aports, or rolled into
abuild (but will make the install scripts a bit longer)

Co-authored-by: Caleb Connolly <caleb@postmarketos.org>
Co-authored-by: jane400 <pmos@j4ne.de>
Co-authored-by: Oliver Smith <ollieparanoid@postmarketos.org>
Co-authored-by: Pablo Correa GÃ³mez <ablocorrea@hotmail.com>
---
 abuild.in | 111 +++++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 110 insertions(+), 1 deletion(-)

diff --git a/abuild.in b/abuild.in
index 83439c5..937c3e9 100644
--- a/abuild.in
+++ b/abuild.in
@@ -833,6 +833,11 @@ postcheck() {
 			&& ! is_openrc_pkg "$name"; then
 		warning "Found OpenRC directory (/etc/conf.d or /etc/init.d) but name doesn't end with -openrc"
 	fi
+	# look for /usr/lib/systemd
+	if [ -e "$dir"/usr/lib/systemd ] \
+			&& ! is_systemd_pkg "$name"; then
+		warning "Found systemd directory (/usr/lib/systemd) but name doesn't end with -systemd"
+	fi
 	# look for /usr/share/doc
 	if [ -e "$dir"/usr/share/doc ] \
 			&& ! is_doc_pkg "$name"; then
@@ -1105,6 +1110,53 @@ check_depver() {
 	return 1
 }
 
+prepare_systemd_install_script() {
+	# Generate install scripts for applying presets if the systemd subpkg has
+	# installable unit files. If existing install scripts are found in the pkg, then
+	# merge them.
+
+	local file="$1"
+	local script="$2"
+	if [ -f "$file" ]; then
+		cp "$file" "$controldir/$script" || return 1
+	else
+		touch "$controldir/$script"
+	fi
+
+	# convert e.g. ".post-install" --> "post_install"
+	local type="${script:1}"
+	type="${type//-/_}"
+
+	# Generate/add logic for applying preset(s) to the install script
+	if [ -n "$systemd_system_units" ] || [ -n "$systemd_user_units" ]; then
+		cat <<-EOF >> "$controldir/$script.header"
+			#!/bin/sh -e
+
+			### auto-generated systemd preset configuration start ###
+			trap "systemd_configure_presets" EXIT
+			_systemd_configure_presets_did_run=false
+
+			systemd_configure_presets() {
+				[[ "$_systemd_configure_presets_did_run" ]] && return
+				if [ ! -f  /usr/lib/systemd/systemd-apk-macros.sh ]; then
+					echo "WARNING: unable to apply presets, missing systemd-apk-macros.sh"
+					exit 0
+				fi
+				. /usr/lib/systemd/systemd-apk-macros.sh
+
+				[ -n "$systemd_user_units" ] && systemd_service_$type user $systemd_user_units
+				[ -n "$systemd_system_units" ] && systemd_service_$type system $systemd_system_units
+
+				_systemd_configure_presets_did_run=true
+			}
+			### auto-generated systemd preset configuration end ###
+		EOF
+
+		cat "$controldir/$script.header" "$controldir/$script" > "$controldir/$script.tmp"
+		mv "$controldir/$script.tmp" "$controldir/$script"
+	fi
+}
+
 prepare_metafiles() {
 	local name=${subpkgname:-$pkgname}
 	[ -z "${name##* *}" ] && die "package name contains spaces"
@@ -1127,7 +1179,15 @@ prepare_metafiles() {
 		fi
 		script=${f#$name}
 		msg "Adding $script"
-		cp "$startdir/$f" "$controldir/$script" || return 1
+		if is_systemd_pkg "$name"; then
+			# special handling for certain install scripts
+			case "$script" in
+			.post-install|.pre-deinstall) prepare_systemd_install_script "$startdir/$f" "$script";;
+			*) cp "$startdir/$f" "$controldir/$script" || return 1 ;;
+			esac
+		else
+			cp "$startdir/$f" "$controldir/$script" || return 1
+		fi
 		chmod +x "$controldir/$script"
 		metafiles="$metafiles $script"
 	done
@@ -1400,6 +1460,13 @@ is_openrc_pkg() {
 	test "${1%-openrc}" != "$1"
 }
 
+# returns true if this is the -systemd package
+is_systemd_pkg() {
+	# NOTE: remove ' || test "systemd" == "$1"' before upstreaming to Alpine
+	# NOTE: pma!6055 needs to be merged before removing this
+	test "${1%-systemd}" != "$1" || test "systemd" == "$1"
+}
+
 # check that noarch is set if needed
 archcheck() {
 	options_has "!archcheck" && return 0
@@ -2133,6 +2200,48 @@ openrc() {
 	default_openrc
 }
 
+# predefined splitfunc systemd
+default_systemd() {
+	depends="$depends_systemd"
+	pkgdesc="$pkgdesc (systemd files)"
+	install_if="systemd ${subpkgname%-systemd}=$pkgver-r$pkgrel"
+
+	if [ -d lib/systemd ]; then
+		error "Detected /lib/systemd dir, should be installed to /usr/lib/systemd"
+		return 1
+	fi
+
+	amove usr/lib/systemd
+
+	# Find user and system unit files, for use later when generating install scripts
+	# that apply presets
+	systemd_user_units=""
+	if [ -d "$subpkgdir/usr/lib/systemd/user" ]; then
+		for file in $(find "$subpkgdir/usr/lib/systemd/user" -type f); do
+			# Only units with [Install] section
+			grep -q "\[Install\]" "$file" || continue
+			systemd_user_units="$systemd_user_units $(basename "$file") "
+		done
+	fi
+	systemd_system_units=""
+	if [ -d "$subpkgdir/usr/lib/systemd/system" ]; then
+		for file in $(find "$subpkgdir/usr/lib/systemd/system" -type f); do
+			# Only units with [Install] section
+			grep -q "\[Install\]" "$file" || continue
+			systemd_system_units="$systemd_system_units $(basename "$file") "
+		done
+	fi
+	if [ -n "$systemd_system_units" ] || [ -n "$systemd_user_units" ]; then
+		# These install scripts will be created in prepare_systemd_install_script later,
+		# or merged with any existing install script(s) if exists
+		install="$subpkgname.post-install $subpkgname.pre-deinstall"
+	fi
+}
+
+systemd() {
+	default_systemd
+}
+
 default_devhelp() {
 	depends=""
 	pkgdesc="$pkgname - devhelp files"
-- 
2.48.1

