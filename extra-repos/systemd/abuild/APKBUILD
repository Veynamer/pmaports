# Forked from Alpine to add systemd-service support
# HACK: pma#3452: this is now in temp/abuild AND extra-repos/systemd/abuild for
# initial systemd bringup. Until this is resolved, make changes to both
# APKBUILDs at once.

pkgname=abuild
pkgver=99993.14.1
_pkgver=3.14.1
pkgrel=0
pkgdesc="Script to build Alpine Packages"
url="https://git.alpinelinux.org/cgit/abuild/"
arch="all"
license="GPL-2.0-only"
depends="fakeroot scanelf openssl>3 apk-tools>=2.0.7-r1 libc-utils
	attr tar pkgconf patch lzip curl libcap-getcap"
makedepends="openssl-dev>3 zlib-dev pkgconfig scdoc"
checkdepends="kyua git"
install="$pkgname.pre-install $pkgname.pre-upgrade"
subpackages="
	apkbuild-cpan:cpan:noarch
	apkbuild-gem-resolver:gems:noarch
	apkbuild-pypi:pypi:noarch
	abuild-rootbld:_rootbld:noarch
	$pkgname-doc
	"
options="suid !check" # tests are SLOW in qemu
pkggroups="abuild"
source="
	https://gitlab.alpinelinux.org/alpine/abuild/-/archive/$_pkgver/abuild-$_pkgver.tar.gz
	0001-prepare_metafiles-install-scripts-in-controldir-chec.patch
	0002-tests-add-tests-for-systemd-splitfunc.patch
	0003-abuild-add-systemd-splitfunc.patch
	0004-abuild-add-warning-in-systemd-split-func-about-non-u.patch
	"
builddir="$srcdir/$pkgname-$_pkgver"

build() {
	make VERSION="$_pkgver-r$pkgrel"
}

check() {
	make check
}

package() {
	make install VERSION="$_pkgver-r$pkgrel" DESTDIR="$pkgdir"

	install -m 644 abuild.conf "$pkgdir"/etc/abuild.conf

	case "$CARCH" in
	x86*|ppc64le)
		# binutils only supports it here
		cat >>"$pkgdir"/usr/share/abuild/default.conf <<-EOF

		# binutils ld.bfd supports this on this architecture; default to it
		export RUSTFLAGS="\$RUSTFLAGS -Clink-arg=-Wl,-z,pack-relative-relocs"
		export LDFLAGS="\$LDFLAGS -Wl,-z,pack-relative-relocs"
		EOF
	esac

	case "$CARCH" in
	x86_64)
		# https://lists.alpinelinux.org/~alpine/devel/%3C1628515011.zujvcn248v.none%40localhost%3E
		# note that this is x86-exclusive. on other architectures, this is pretty much always bad
		# https://github.com/rust-lang/rust/pull/106380
		cat >>"$pkgdir"/usr/share/abuild/default.conf <<-EOF

		# -fno-plt has very slight improvements to general code size and speed on x86-only,
		# for the common system dynamic linking case
		export CFLAGS="\$CFLAGS -fno-plt"
		export CXXFLAGS="\$CXXFLAGS -fno-plt"
		EOF
		;;
	esac

	install -d -m 775 -g abuild "$pkgdir"/var/cache/distfiles
}

cpan() {
	pkgdesc="Script to generate perl APKBUILD from CPAN"
	depends="perl perl-libwww perl-json perl-module-build perl-module-build-tiny
		perl-lwp-protocol-https"

	amove usr/bin/apkbuild-cpan
}

gems() {
	pkgdesc="APKBUILD dependency resolver for RubyGems"
	depends="ruby ruby-augeas"

	amove usr/bin/apkbuild-gem-resolver
}

pypi() {
	pkgdesc="Script to generate python3 APKBUILD from PYPI"
	depends="perl perl-libwww perl-json perl-module-build-tiny perl-lwp-protocol-https
	perl-ipc-system-simple"

	amove usr/bin/apkbuild-pypi
}

_rootbld() {
	pkgdesc="Build packages in chroot"
	depends="abuild bubblewrap cmd:envsubst git"
	mkdir -p "$subpkgdir"
}

sha512sums="
49e243114933f3013884f0014fc8e5f142ff146de3d9ddb62e5ad98689cb1bf2bc8172da0331943f44b106dca4fd6fcdd917f5439e82facbb97eccc0f3459f37  abuild-3.14.1.tar.gz
6d566504df6458bae91b3cb0e270193fbfbdf687d1d81262004c9ce5dacb371ccd7099f730990cd598f3c90b1bad12234fdfaa0e387fe6eb6b2d37c660201b41  0001-prepare_metafiles-install-scripts-in-controldir-chec.patch
86d750862850c30d3ed5aeaf4279992cffbc6b61e2f1a4891d97e9f5b836c8d41cac802a9b91cd36444fd53951a6f8c57ca588234bdd5a41210a1331327af999  0002-tests-add-tests-for-systemd-splitfunc.patch
4734b10fc9d247132a34d17a94dd2707dd94a545c855e052dd4db246b9a287b9dc9a3c6efe3b1bf900ef379cfe2809da1e57f5a5961dfd4bf9066f6b2d3085aa  0003-abuild-add-systemd-splitfunc.patch
895b50380cd178c7d65cb6e77957a2f2367a3637a519e3c33310b1d0ef732953bf1a9d0fb7eda1005d2d4b8ab6a60b5f59c4962d03b46bd27692e504c14661c4  0004-abuild-add-warning-in-systemd-split-func-about-non-u.patch
"
